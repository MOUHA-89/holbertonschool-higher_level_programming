=========================
how to use add_integer.py
=========================
this module define an integer additional function " add_integer(a, b=98) "

usage
=====

"add_integer( ...)" returns the additional of its arguments, value is the result of (a + b).

    
    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(1, 2)
    3
    >>> add_integer(100, -2)
    98
    >>> add_integer(2)
    100
    >>> add_integer(100.3, -2)
    98
    >>> add_integer(-98, 1)
    -97

Error Handling
==============

    >>> add_integer(4, "School")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

        ...
    overflowErroe: unable to convert an infinite floating point number to an integer
    >>> add_integer(0, float('nan'))
    Traceback (most recent last call):
        ...

    ValueError: Unable to convert float NaN to integer
